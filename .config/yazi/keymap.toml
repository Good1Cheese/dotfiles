[manager]

keymap = [
  { on = ["<Esc>"], run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
  { on = ["q"], run = "quit", desc = "Exit the process" },
  { on = ["Q"], run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
  { on = ["<C-q>"], run = "close", desc = "Close the current tab, or quit if it is last tab" },
  { on = ["<C-z>"], run = "suspend", desc = "Suspend the process" },

  # Navigation
  { on = ["k"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["j"], run = "arrow 1", desc = "Move cursor down" },

  { on = ["K"], run = "arrow -5", desc = "Move cursor up 5 lines" },
  { on = ["J"], run = "arrow 5", desc = "Move cursor down 5 lines" },

  { on = ["<C-u>"], run = "arrow -50%", desc = "Move cursor up half page" },
  { on = ["<C-d>"], run = "arrow 50%", desc = "Move cursor down half page" },
  { on = ["<C-b>"], run = "arrow -100%", desc = "Move cursor up one page" },
  { on = ["<C-f>"], run = "arrow 100%", desc = "Move cursor down one page" },

  { on = ["h"], run = ["leave", "escape --visual --select"], desc = "Go back to the parent directory" },
  { on = ["l"], run = ["plugin --sync smart-enter", "escape --visual --select"], desc = "Enter the child directory" },

  { on = ["H"], run = "back", desc = "Go back to the previous directory" },
  { on = ["L"], run = "forward", desc = "Go forward to the next directory" },

  { on = ["<A-k>"], run = "seek -5", desc = "Peek up 5 units in the preview" },
  { on = ["<A-j>"], run = "seek 5", desc = "Peek down 5 units in the preview" },

  { on = ["<Up>"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["<Down>"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["<Left>"], run = "leave", desc = "Go back to the parent directory" },
  { on = ["<Right>"], run = "enter", desc = "Enter the child directory" },

  { on = ["g", "g"], run = "arrow -99999999", desc = "Move cursor to the top" },
  { on = ["G"], run = "arrow 99999999", desc = "Move cursor to the bottom" },

  # Selection
  { on = ["<C-n>"], run = ["select --state=none", "arrow 1"], desc = "Toggle the current selection state" },
  { on = ["v"], run = "visual_mode", desc = "Enter visual mode (selection mode)" },
  { on = ["V"], run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
  { on = ["<C-a>"], run = "select_all --state=true", desc = "Select all files" },
  { on = ["<C-r>"], run = "select_all --state=none", desc = "Inverse selection of all files" },

  # Operation
  { on = ["o"], run = "open", desc = "Open the selected files" },
  { on = ["O"], run = "open --interactive", desc = "Open the selected files interactively" },
  { on = ["<Enter>"], run = "plugin --sync smart-enter", desc = "Open the selected files" },
  { on = ["<C-Enter>"], run = "open --interactive", desc = "Open the selected files interactively" },
  { on = ["y"], run = ["yank", "escape --visual --select"], desc = "Copy the selected files" },
  { on = ["x"], run = ["yank --cut", "escape --visual --select"], desc = "Cut the selected files" },
  # { on = ["p"], run = "plugin --sync smart-paste", desc = "Paste the files" },
  { on = ["p"], run = "paste", desc = "Paste the files" },
  { on = ["P"], run = "paste --force", desc = "Paste the files (overwrite if the destination exists)" },
  { on = ["-"], run = "link", desc = "Symlink the absolute path of files" },
  { on = ["_"], run = "link --relative", desc = "Symlink the relative path of files" },
  { on = [ "d", "d" ], run = ["remove", "escape --visual --select"], desc = "trash with yes" },
  { on = [ "d", "y" ], run = ["remove --force", "escape --visual --select"], desc = "trash" },
  { on = ["D"], run = ["remove --permanently", "escape --visual --select"], desc = "Permanently delete the files" },
  { on = ["a"], run = "create", desc = "Create a file or directory (ends with / for directories)" },
  { on = ["r"], run = "rename", desc = "Rename a file or directory" },
  { on = [";"], run = "shell", desc = "Run a shell command" },
  { on = [":"], run = "shell --block", desc = "Run a shell command (block the UI until the command finishes)" },
  { on = ["."], run = "hidden toggle", desc = "Toggle the visibility of hidden files" },
  { on = ["s"], run = "search fd", desc = "Search files by name using fd" },
  { on = ["S"], run = "search rg", desc = "Search files by content using ripgrep" },
  { on = ["<C-s>"], run = "search none", desc = "Cancel the ongoing search" },
  { on = ["z"], run = "plugin fzf", desc = "Jump to a directory, or reveal a file using fzf" },
  { on = ["<C-t>"], run = '''shell "$SHELL" --block --confirm''', desc = "Open shell here" },

  # Custom
  { on = ["e"], run = '''shell '$EDITOR' --block --confirm''', desc = "Open nvim" },
  { on = ["U"], run = '''shell 'lazygit' --block --confirm''', desc = "Open lazygit" },
  { on = ["m"], run = "plugin bookmarks --args=save", desc = "Save current position as a bookmark" },
  { on = ["'"], run = "plugin bookmarks --args=jump", desc = "Jump to a bookmark" },
  { on = ["B"], run = '''shell 'dragon -x -a "$@"' --confirm''', desc = "Open dragon" },
  { on = [ "b", "d" ], run = "plugin bookmarks --args=delete", desc = "Delete a bookmark" },
  { on = [ "b", "D" ], run = "plugin bookmarks --args=delete_all", desc = "Delete all bookmark" },

  { on = ["c", "c"], run = "copy path", desc = "Copy the absolute path" },
  { on = ["c", "c"], run = "copy path", desc = "Copy the absolute path" },
  { on = ["c", "b"], run = '''shell 'btop' --block --confirm''', desc = "BTOP" },
  { on = ["c", "B"], run = '''shell 'bluetuith' --block --confirm''', desc = "BLUETOOTH" },
  { on = ["c", "n"], run = '''shell 'ncdu --color dark --exclude /mnt/' --block --confirm''', desc = "NCDU" },
  { on = ["c", "w"], run = '''shell 'wine "$1"' --block --confirm''', desc = "Open file with wine" },
  { on = ["c", "W"], run = '''shell 'echo xwallpaper --zoom "$1" > ~/.config/awesome/wallpaper.sh && exec ~/.config/awesome/wallpaper.sh' --confirm''', desc = "Change wallpapers" },
  { on = ["c", "d"], run = '''shell 'dust' --block --confirm''', desc = "DUST" },
  { on = ["c", "t"], run = '''shell 'gtrash restore' --block --confirm''', desc = "Trash" },
  { on = ["c", "T"], run = '''shell 'gtrash restore-group' --block --confirm''', desc = "G TRASH" },
  { on = ["c", "Y"], run = '''shell 'trash-empty' --block --confirm''', desc = "EMPTY TRASH" },

  # { on = ["c", "d"], run = "copy dirname", desc = "Copy the path of the parent directory" },
  # { on = ["c", "f"], run = "copy filename", desc = "Copy the name of the file" },
  # { on = ["c", "n"], run = "copy name_without_ext", desc = "Copy the name of the file without the extension" },

  # Archieve
  { on = ["A", "z"], run = '''shell 'zip archieve -jr "$@"' --block --confirm''', desc = "ZIP files" },
  { on = ["A", "x"], run = '''shell 'zip archieve -r "$@"' --block --confirm''', desc = "ZIP J files" },

  # Linemode
  { on = ["m", "s"], run = "linemode size", desc = "Set linemode to size" },
  { on = ["m", "p"], run = "linemode permissions", desc = "Set linemode to permissions" },
  { on = ["m", "m"], run = "linemode mtime", desc = "Set linemode to mtime" },
  { on = ["m", "n"], run = "linemode none", desc = "Set linemode to none" },

  # Find
  { on = ["/"], run = "find --smart" },
  { on = ["?"], run = "find --previous --smart" },
  { on = ["n"], run = "find_arrow" },
  { on = ["N"], run = "find_arrow --previous" },

  # Sorting
  { on = [",", "a"], run = "sort alphabetical --dir_first", desc = "Sort alphabetically" },
  { on = [",", "A"], run = "sort alphabetical --reverse --dir_first", desc = "Sort alphabetically (reverse)" },
  { on = [",", "c"], run = "sort created --dir_first", desc = "Sort by creation time" },
  { on = [",", "C"], run = "sort created --reverse --dir_first", desc = "Sort by creation time (reverse)" },
  { on = [",", "m"], run = "sort modified --dir_first", desc = "Sort by modified time" },
  { on = [",", "M"], run = "sort modified --reverse --dir_first", desc = "Sort by modified time (reverse)" },
  { on = [",", "n"], run = "sort natural --dir_first", desc = "Sort naturally" },
  { on = [",", "N"], run = "sort natural --reverse --dir_first", desc = "Sort naturally (reverse)" },
  { on = [",", "s"], run = "sort size --dir_first", desc = "Sort by size" },
  { on = [",", "S"], run = "sort size --reverse --dir_first", desc = "Sort by size (reverse)" },

  # Tabs
  { on = ["t"], run = "tab_create --current", desc = "Create a new tab using the current path" },

  { on = ["<A-1>"], run = "tab_switch 0", desc = "Switch to the first tab" },
  { on = ["<A-2>"], run = "tab_switch 1", desc = "Switch to the second tab" },
  { on = ["<A-3>"], run = "tab_switch 2", desc = "Switch to the third tab" },
  { on = ["<A-4>"], run = "tab_switch 3", desc = "Switch to the fourth tab" },
  { on = ["<A-5>"], run = "tab_switch 4", desc = "Switch to the fifth tab" },
  { on = ["<A-6>"], run = "tab_switch 5", desc = "Switch to the sixth tab" },
  { on = ["<A-7>"], run = "tab_switch 6", desc = "Switch to the seventh tab" },
  { on = ["<A-8>"], run = "tab_switch 7", desc = "Switch to the eighth tab" },
  { on = ["<A-9>"], run = "tab_switch 8", desc = "Switch to the ninth tab" },

  { on = ["1"], run = "plugin relative-motions --args=1", desc = "Move in relative steps" },
  { on = ["2"], run = "plugin relative-motions --args=2", desc = "Move in relative steps" },
  { on = ["3"], run = "plugin relative-motions --args=3", desc = "Move in relative steps" },
  { on = ["4"], run = "plugin relative-motions --args=4", desc = "Move in relative steps" },
  { on = ["5"], run = "plugin relative-motions --args=5", desc = "Move in relative steps" },
  { on = ["6"], run = "plugin relative-motions --args=6", desc = "Move in relative steps" },
  { on = ["7"], run = "plugin relative-motions --args=7", desc = "Move in relative steps" },
  { on = ["8"], run = "plugin relative-motions --args=8", desc = "Move in relative steps" },
  { on = ["9"], run = "plugin relative-motions --args=9", desc = "Move in relative steps" },

  { on = ["["], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = ["]"], run = "tab_switch 1 --relative", desc = "Switch to the next tab" },

  { on = ["{"], run = "tab_swap -1", desc = "Swap the current tab with the previous tab" },
  { on = ["}"], run = "tab_swap 1", desc = "Swap the current tab with the next tab" },

  # Tasks
  { on = ["w"], run = "tasks_show", desc = "Show the tasks manager" },

  # Goto
  { on = ["<Space>", "~"], run = "cd ~" },
  { on = ["<Space>", "/"], run = "cd /" },
  { on = ["<Space>", "c"], run = "cd ~/.config" },
  { on = ["<Space>", "C"], run = "cd ~/.config/compfy" },
  { on = ["<Space>", "n"], run = "cd ~/.config/nvim" },
  # { on = ["<Space>", "b"], run = '''shell 'cd ~/nixos-config/nixos && $EDITOR packages.nix' --block --confirm''', desc = "Open NIX" },
  { on = ["<Space>", "b"], run = "cd ~/nixos-config/nixos" },
  { on = ["<Space>", "a"], run = "cd ~/.config/awesome" },
  { on = ["<Space>", "f"], run = "cd ~/.config/fish" },
  { on = ["<Space>", "l"], run = "cd ~/.config/yazi" },
  { on = ["<Space>", "q"], run = "cd ~/.config/qutebrowser" },
  { on = ["<Space>", "w"], run = "cd ~/.config/wezterm" },
  { on = ["<Space>", "W"], run = "cd ~/Work" },
  { on = ["<Space>", "v"], run = "cd ~/Videos" },
  { on = ["<Space>", "s"], run = "cd ~/.local/share/Steam/steamapps/common" },
  { on = ["<Space>", "h"], run = "cd /mnt/hdd/SteamLibrary/steamapps/common" },
  { on = ["<Space>", "r"], run = "cd /run/media" },
  { on = ["<Space>", "m"], run = "cd /mnt/hdd" },
  { on = ["<Space>", "P"], run = "cd ~/Pictures" },
  { on = ["<Space>", "p"], run = "cd ~/Projects" },

  { on = ["<Space>", "1"], run = "cd ~/.local/share/Steam/steamapps/common/GarrysMod/garrysmod/gamemodes/cstrike" },
  { on = ["<Space>", "2"], run = "cd ~/Projects/ChinDin" },
  { on = ["<Space>", "3"], run = "cd ~/Projects/codewars-relay" },

  { on = ["<Space>", "u"], run = "cd /mnt/hdd/Linux_Unreal_Engine_5.3.2/Engine/Binaries/Linux" },
  { on = ["<Space>", "U"], run = "cd ~/Projects/Unity" },

  { on = ["<Space>", "t"], run = "cd ~/.local/share/Trash" },
  { on = ["<Space>", "T"], run = "cd ~/Torrents" },

  { on = ["<Space>", "D"], run = "cd ~/Downloads" },
  { on = ["<Space>", "d"], run = "cd ~/dotfiles" },

  { on = ["<Space>", "<Space>"], run = "cd --interactive", desc = "Go to a directory interactively" },

  # Help
  { on = ["~"], run = "help", desc = "Open help" },

  # Plugins
  { on = ["i"], run = "plugin keyjump", desc = "Keyjump (Normal mode)" },
]

[tasks]

keymap = [
  # Close
  { on = ["<Esc>"], run = "close", desc = "Hide the task manager" },
  { on = ["<C-q>"], run = "close", desc = "Hide the task manager" },

  { on = ["w"], run = "close", desc = "Hide the task manager" },
  { on = ["k"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["j"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["<Up>"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["<Down>"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["<Enter>"], run = "inspect", desc = "Inspect the task" },
  { on = ["x"], run = "cancel", desc = "Cancel the task" },
  { on = ["~"], run = "help", desc = "Open help" },
]

[select]

keymap = [
  # Close
  { on = ["<C-q>"], run = "close", desc = "Cancel selection" },
  { on = ["<Esc>"], run = "close", desc = "Cancel selection" },
  { on = ["<Enter>"], run = "close --submit", desc = "Submit the selection" },

  { on = ["k"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["j"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["K"], run = "arrow -5", desc = "Move cursor up 5 lines" },
  { on = ["J"], run = "arrow 5", desc = "Move cursor down 5 lines" },
  { on = ["<Up>"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["<Down>"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["~"], run = "help", desc = "Open help" },
]

[input]

keymap = [
  { on = ["<Backspace>"], run = "backspace" },
  { on = ["<C-q>"], run = "close", desc = "Cancel input" },
  { on = ["<Enter>"], run = "close --submit", desc = "Submit the input" },
  { on = ["<Esc>"], run = "escape", desc = "Go back the normal mode, or cancel input" },

  # Mode
  { on = ["i"], run = "insert", desc = "Enter insert mode" },
  { on = ["a"], run = "insert --append", desc = "Enter append mode" },
  { on = ["v"], run = "visual", desc = "Enter visual mode" },
  { on = ["V"], run = ["move -999", "visual", "move 999"], desc = "Enter visual mode and select all" },

  # Navigation
  { on = ["h"], run = "move -1", desc = "Move cursor left" },
  { on = ["l"], run = "move 1", desc = "Move cursor right" },

  { on = ["0"], run = "move -999", desc = "Move to the BOL" },
  { on = ["$"], run = "move 999", desc = "Move to the EOL" },
  { on = ["I"], run = ["move -999", "insert"], desc = "Move to the BOL, and enter insert mode" },
  { on = ["A"], run = ["move 999", "insert --append"], desc = "Move to the EOL, and enter append mode" },

  { on = ["<Left>"], run = "move -1", desc = "Move cursor left" },
  { on = ["<Right>"], run = "move 1", desc = "Move cursor right" },

  { on = ["b"], run = "backward", desc = "Move to the beginning of the previous word" },
  { on = ["w"], run = "forward", desc = "Move to the beginning of the next word" },
  { on = ["e"], run = "forward --end-of-word", desc = "Move to the end of the next word" },

  # Deletion
  { on = ["d"], run = "delete --cut", desc = "Cut the selected characters" },
  { on = ["D"], run = ["delete --cut", "move 999"], desc = "Cut until the EOL" },
  { on = ["c"], run = "delete --cut --insert", desc = "Cut the selected characters, and enter insert mode" },
  { on = ["C"], run = ["delete --cut --insert", "move 999"], desc = "Cut until the EOL, and enter insert mode" },
  { on = ["x"], run = ["delete --cut", "move 1 --in-operating"], desc = "Cut the current character" },

  # Yank/Paste
  { on = ["y"], run = "yank", desc = "Copy the selected characters" },
  { on = ["p"], run = "paste", desc = "Paste the copied characters after the cursor" },
  { on = ["P"], run = "paste --before", desc = "Paste the copied characters before the cursor" },

  # Undo/Redo
  { on = ["u"], run = "undo", desc = "Undo the last operation" },
  { on = ["<C-r>"], run = "redo", desc = "Redo the last operation" },

  # Help
  { on = ["~"], run = "help", desc = "Open help" },
]

[completion]

keymap = [
  # close
  { on = ["<C-q>"], run = "close", desc = "Cancel completion" },
  { on = ["<Tab>"], run = "close --submit", desc = "Submit the completion" },

  # move
  { on = ["<A-k>"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["<A-j>"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["<Up>"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["<Down>"], run = "arrow 1", desc = "Move cursor down" },
  { on = ["~"], run = "help", desc = "Open help" },
]

[help]

keymap = [
  { on = ["<Esc>"], run = "escape", desc = "Clear the filter, or hide the help" },
  { on = ["q"], run = "close", desc = "Exit the process" },
  { on = ["<C-q>"], run = "close", desc = "Hide the help" },

  # Navigation
  { on = ["k"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["j"], run = "arrow 1", desc = "Move cursor down" },

  { on = ["K"], run = "arrow -5", desc = "Move cursor up 5 lines" },
  { on = ["J"], run = "arrow 5", desc = "Move cursor down 5 lines" },

  { on = ["<Up>"], run = "arrow -1", desc = "Move cursor up" },
  { on = ["<Down>"], run = "arrow 1", desc = "Move cursor down" },

  # Filtering
  { on = ["/"], run = "filter", desc = "Apply a filter for the help items" },
]
